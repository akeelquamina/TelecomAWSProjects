---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: "QuamTel"
  region: us-east-2

vpc:
  id: "vpc-0deb7442cca2b9fb1"
  cidr: "10.0.0.0/16"
  subnets:
    private:
      us-east-2a:
        id: "subnet-0c6d50eac73dee0a8"
        cidr: "10.0.3.0/24"
      us-east-2b:
        id: "subnet-00df915fb769e2c2f"
        cidr: "10.0.4.0/24"
    public:
      us-east-2a:
        id: "subnet-0bae8b8fd634a62d5"
        cidr: "10.0.1.0/24"
        natGateway: true
      us-east-2b:
        id: "subnet-04667453a1860087f"
        cidr: "10.0.2.0/24"
  sharedNodeSecurityGroup: sg-03208d34d2bb77158
  manageSharedNodeSecurityGroupRules: false
  clusterEndpoints:
    publicAccess: true
    privateAccess: true

addons:
  - name: vpc-cni # no version is specified so it deploys the default version
    attachPolicyARNs:
      - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy

iam:
  withOIDC: true
  serviceAccounts:
    - metadata:
        name: autoscaler-service
        namespace: kube-system
      attachPolicy:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
        Action:
        - "autoscaling:DescribeAutoScalingGroups"
        - "autoscaling:DescribeAutoScalingInstances"
        - "autoscaling:DescribeLaunchConfigurations"
        - "autoscaling:DescribeTags"
        - "autoscaling:SetDesiredCapacity"
        - "autoscaling:TerminateInstanceInAutoScalingGroup"
        - "ec2:DescribeLaunchTemplateVersions"
        Resource: '*'

nodeGroups:
  - name: Microservices-TAS
    instanceType: t3.small
    desiredCapacity: 2
    privateNetworking: true
    iam:
      withAddonPolicies:
        autoScaler: true
    subnets:
      - us-east-2a
      - us-east-2b
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/cluster-13: "owned"

cloudWatch:
  clusterLogging:
    enableTypes: ["all"]
    logRetentionInDays: 60