--- 
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: cluster-4
  region: us-east-2

vpc:
  id: "vpc-0dd90be52a719e88e" 
  cidr: "172.20.0.0/16"       
  subnets:
    
    private:
      us-east-2a:
        id: "subnet-0d65396d253631a43"
        cidr: "172.20.128.0/19"

      us-east-2b:
        id: "subnet-075ad7dce3167e662"
        cidr: "172.20.96.0/19" 
    
    Public:  
      us-east-2a:
        id: "subnet-05932975c99209d15"
        cidr: "172.20.32.0/19"

      us-east-2b:
        id: "subnet-0fcb93f5ba8981de3"
        cidr: "172.20.64.0/19" 
  clusterEndpoints:
    publicAccess: false
    privateAccess: true

addons:
  - name: vpc-cni
    version: latest
  - name: coredns
    version: latest
  - name: kube-proxy
    version: latest

iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: s3-reader
      # if no namespace is set, "default" will be used;
      # the namespace will be created if it doesn't exist already
      namespace: backend-apps
      labels: {aws-usage: "application"}
    attachPolicyARNs:
    - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      ebsCSIController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: external-dns
      namespace: kube-system
    wellKnownPolicies:
      externalDNS: true
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true
  - metadata:
      name: build-service
      namespace: ci-cd
    wellKnownPolicies:
      imageBuilder: true
  - metadata:
      name: autoscaler-service
      namespace: kube-system
    attachPolicy: # inline policy can be defined along with `attachPolicyARNs`
      Version: "2012-10-17"
      Statement:
      - Effect: Allow
        Action:
        - "autoscaling:DescribeAutoScalingGroups"
        - "autoscaling:DescribeAutoScalingInstances"
        - "autoscaling:DescribeLaunchConfigurations"
        - "autoscaling:DescribeTags"
        - "autoscaling:SetDesiredCapacity"
        - "autoscaling:TerminateInstanceInAutoScalingGroup"
        - "ec2:DescribeLaunchTemplateVersions"
        Resource: '*'

nodeGroups:
  - name: Microservices-TAS
    instanceType: t3.small
    desiredCapacity: 2
    privateNetworking: true
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/cluster-13: "owned"

cloudWatch:
  clusterLogging:
    
    enableTypes: ["all"]
    logRetentionInDays: 60