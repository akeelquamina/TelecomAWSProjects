apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: QuamTel
  region: us-east-2

vpc:
  id: "vpc-0eb93143d766ebcf1"
  cidr: "172.20.0.0/16"
  subnets:
    private:
      us-east-2a:
        id: "subnet-0c719827aa42b4461"
        cidr: "172.20.128.0/19" 
      us-east-2b:
        id: "subnet-04f7512d1213b94d9"
        cidr: "172.20.96.0/19"  
    public: 
      us-east-2a:
        id: "subnet-0b267b7f2a11082ab"
        cidr: "172.20.32.0/19"   
      us-east-2b:
        id: "subnet-09b64bf069a48fbe7"
        cidr: "172.20.64.0/19"

nodeGroups:
  - name: TAS
    instanceType: t3.small
    minSize: 1
    maxSize: 2
    desiredCapacity: 2
    volumeSize: 20
    amiFamily: AmazonLinux2
    tags:
      nodegroup-type: "worker"
    iam:
      withAddonPolicies:
        imageBuilder: true
      attachPolicyARNs:
        - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
        - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"

# Add the following post-hooks to configure security group rules
postHooks:
  - name: ConfiguringSecurityGroups
    commands:
      # Get EKS Control Plane Security Group ID
      - eksControlPlaneSGID=$(aws eks describe-cluster --name QuamTel --query "cluster.resourcesVpcConfig.clusterSecurityGroupId" --output text)

      # Get Node Group Security Group ID
      - nodeGroupSGID=$(aws eks describe-nodegroup --cluster-name QuamTel --nodegroup-name TAS --query "nodegroup.resources[0].securityGroups" --output text)

      # Inbound rule for EKS API Server
      - aws ec2 authorize-security-group-ingress --group-id $eksControlPlaneSGID --protocol tcp --port 443 --source-security-group $nodeGroupSGID

      # Inbound rule for Node-to-Node communication
      - aws ec2 authorize-security-group-ingress --group-id $nodeGroupSGID --protocol -1 --source-security-group $nodeGroupSGID

      # Inbound rule for Control Plane Communication
      - aws ec2 authorize-security-group-ingress --group-id $nodeGroupSGID --protocol tcp --port 443 --source-security-group $eksControlPlaneSGID

      # Outbound rule for Node-to-Node communication
      - aws ec2 authorize-security-group-egress --group-id $eksControlPlaneSGID --protocol -1 --destination-security-group $nodeGroupSGID

      # Outbound rule for Control Plane Communication
      - aws ec2 authorize-security-group-egress --group-id $nodeGroupSGID --protocol tcp --port 443 --destination-security-group $eksControlPlaneSGID
